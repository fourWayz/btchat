{
  "address": "0xAC7e400D1cb7b04264555b3a0a3adb2EBA089e9F",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "commenter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "postId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "content",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "CommentAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "content",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "image",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "PostCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "liker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "postId",
          "type": "uint256"
        }
      ],
      "name": "PostLiked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sharer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "originalPostId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPostId",
          "type": "uint256"
        }
      ],
      "name": "PostShared",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "image",
          "type": "string"
        }
      ],
      "name": "ProfileImageUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "username",
          "type": "string"
        }
      ],
      "name": "UserRegistered",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_postId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_content",
          "type": "string"
        }
      ],
      "name": "addComment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_content",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_image",
          "type": "string"
        }
      ],
      "name": "createPost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newUsername",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_newProfileImage",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_newBio",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_newCoverImage",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_newInterests",
          "type": "string[]"
        }
      ],
      "name": "editProfile",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "freePostsRemaining",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_postId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_commentId",
          "type": "uint256"
        }
      ],
      "name": "getComment",
      "outputs": [
        {
          "internalType": "address",
          "name": "commenter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "content",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getFreePostsRemaining",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_postId",
          "type": "uint256"
        }
      ],
      "name": "getPost",
      "outputs": [
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "content",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "image",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "likes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "commentsCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "originalPostId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPostsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUserByAddress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "username",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isRegistered",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "profileImage",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "bio",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "coverPhoto",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "interests",
              "type": "string[]"
            }
          ],
          "internalType": "struct BTChat.User",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserInterests",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserStats",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalPosts",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalLikes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalComments",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "interests",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_postId",
          "type": "uint256"
        }
      ],
      "name": "likePost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "postComments",
      "outputs": [
        {
          "internalType": "address",
          "name": "commenter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "content",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "postCommentsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "posts",
      "outputs": [
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "content",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "image",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "likes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "commentsCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "originalPostId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_username",
          "type": "string"
        }
      ],
      "name": "registerUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_bio",
          "type": "string"
        }
      ],
      "name": "setBio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_cover",
          "type": "string"
        }
      ],
      "name": "setCoverPhoto",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_image",
          "type": "string"
        }
      ],
      "name": "setProfileImage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_interests",
          "type": "string[]"
        }
      ],
      "name": "setUserInterests",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_postId",
          "type": "uint256"
        }
      ],
      "name": "sharePost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userCommentCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userInterests",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userLikeCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userPostCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "string",
          "name": "username",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isRegistered",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "profileImage",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "bio",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "coverPhoto",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "walletToCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb9b7249150c38ec05186f41495186a0aac11fed0a0ebdc0aae400db48bfeca12",
  "receipt": {
    "to": null,
    "from": "0x7f6645c03A2afD5099103bE90fd8cea762e981BA",
    "contractAddress": "0xAC7e400D1cb7b04264555b3a0a3adb2EBA089e9F",
    "transactionIndex": 4,
    "gasUsed": "4163090",
    "logsBloom": "0x
    "blockHash": "0xb1a2f3aea05aa9973551bbce9fe076f28afe6e37fa7ecccbd508886047020185",
    "transactionHash": "0xb9b7249150c38ec05186f41495186a0aac11fed0a0ebdc0aae400db48bfeca12",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 12896335,
        "transactionHash": "0xb9b7249150c38ec05186f41495186a0aac11fed0a0ebdc0aae400db48bfeca12",
        "address": "0xAC7e400D1cb7b04264555b3a0a3adb2EBA089e9F",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000007f6645c03a2afd5099103be90fd8cea762e981ba"
        ],
        "data": "0x",
        "logIndex": 6,
        "blockHash": "0xb1a2f3aea05aa9973551bbce9fe076f28afe6e37fa7ecccbd508886047020185"
      },
      {
        "transactionIndex": 4,
        "blockNumber": 12896335,
        "transactionHash": "0xb9b7249150c38ec05186f41495186a0aac11fed0a0ebdc0aae400db48bfeca12",
        "address": "0xAC7e400D1cb7b04264555b3a0a3adb2EBA089e9F",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000007f6645c03a2afd5099103be90fd8cea762e981ba",
          "0x0000000000000000000000007f6645c03a2afd5099103be90fd8cea762e981ba"
        ],
        "data": "0x",
        "logIndex": 7,
        "blockHash": "0xb1a2f3aea05aa9973551bbce9fe076f28afe6e37fa7ecccbd508886047020185"
      }
    ],
    "blockNumber": 12896335,
    "cumulativeGasUsed": "4406973",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "cdacda9e5df62c7a137be6f64a455aba",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"commenter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"postId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CommentAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PostCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"postId\",\"type\":\"uint256\"}],\"name\":\"PostLiked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sharer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalPostId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPostId\",\"type\":\"uint256\"}],\"name\":\"PostShared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"}],\"name\":\"ProfileImageUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"UserRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_postId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_content\",\"type\":\"string\"}],\"name\":\"addComment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_content\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_image\",\"type\":\"string\"}],\"name\":\"createPost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newUsername\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_newProfileImage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_newBio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_newCoverImage\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_newInterests\",\"type\":\"string[]\"}],\"name\":\"editProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"freePostsRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_postId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_commentId\",\"type\":\"uint256\"}],\"name\":\"getComment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"commenter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getFreePostsRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_postId\",\"type\":\"uint256\"}],\"name\":\"getPost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"likes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commentsCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalPostId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPostsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getUserByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isRegistered\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"profileImage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"coverPhoto\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"interests\",\"type\":\"string[]\"}],\"internalType\":\"struct BTChat.User\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserInterests\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalPosts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalLikes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalComments\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"interests\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_postId\",\"type\":\"uint256\"}],\"name\":\"likePost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"postComments\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"commenter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"postCommentsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"posts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"likes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commentsCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalPostId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"}],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"}],\"name\":\"setBio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_cover\",\"type\":\"string\"}],\"name\":\"setCoverPhoto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_image\",\"type\":\"string\"}],\"name\":\"setProfileImage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_interests\",\"type\":\"string[]\"}],\"name\":\"setUserInterests\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_postId\",\"type\":\"uint256\"}],\"name\":\"sharePost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userCommentCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userInterests\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userLikeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userPostCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isRegistered\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"profileImage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"coverPhoto\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletToCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BTChat.sol\":\"BTChat\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"contracts/BTChat.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract BTChat is ReentrancyGuard, Ownable {\\n    struct User {\\n        string username;\\n        address userAddress;\\n        address sender;\\n        bool isRegistered;\\n        string profileImage;\\n        string bio;\\n        string coverPhoto;\\n        string[] interests;\\n    }\\n\\n    struct Post {\\n        address author;\\n        string content;\\n        string image;\\n        uint256 timestamp;\\n        uint256 likes;\\n        uint256 commentsCount;\\n        uint256 originalPostId;\\n        mapping(address => bool) likedBy;\\n    }\\n\\n    struct Comment {\\n        address commenter;\\n        string content;\\n        uint256 timestamp;\\n    }\\n\\n    string[] public interests;\\n    mapping(address => User) public users;\\n    mapping(address => address) public walletToCreator;\\n    mapping(address => uint256) public freePostsRemaining;\\n    mapping(uint256 => mapping(uint256 => Comment)) public postComments;\\n    mapping(uint256 => uint256) public postCommentsCount;\\n    mapping(address => string[]) public userInterests;\\n\\n    mapping(address => uint256) public userPostCount;\\n    mapping(address => uint256) public userLikeCount;\\n    mapping(address => uint256) public userCommentCount;\\n\\n    Post[] public posts;\\n\\n    event UserRegistered(address indexed userAddress, string username);\\n    event ProfileImageUpdated(address indexed userAddress, string image);\\n    event PostCreated(address indexed author, string content, string image, uint256 timestamp);\\n    event PostShared(address indexed sharer, uint256 originalPostId, uint256 newPostId);\\n    event PostLiked(address indexed liker, uint256 indexed postId);\\n    event CommentAdded(address indexed commenter, uint256 indexed postId, string content, uint256 timestamp);\\n\\n    modifier onlyRegisteredUser() {\\n        require(users[_getUserAddress()].isRegistered, \\\"User is not registered\\\");\\n        _;\\n    }\\n\\n    constructor() Ownable(msg.sender) {\\n        transferOwnership(msg.sender);\\n    }\\n\\n    function registerUser(address creator, string memory _username) external {\\n        require(!users[creator].isRegistered, \\\"User is already registered\\\");\\n        require(bytes(_username).length > 0, \\\"Username should not be empty\\\");\\n\\n        users[creator] = User({\\n            username: _username,\\n            userAddress: creator,\\n            sender: msg.sender,\\n            isRegistered: true,\\n            profileImage: \\\"\\\",\\n            bio: \\\"\\\",\\n            coverPhoto: \\\"\\\",\\n            interests: new string[](0)\\n        });\\n\\n        walletToCreator[msg.sender] = creator;\\n        freePostsRemaining[msg.sender] = FREE_POST_ALLOWANCE;\\n\\n        emit UserRegistered(creator, _username);\\n    }\\n\\n    function setProfileImage(string memory _image) external onlyRegisteredUser {\\n        address user = _getUserAddress();\\n        users[user].profileImage = _image;\\n        emit ProfileImageUpdated(user, _image);\\n    }\\n\\n    function setBio(string memory _bio) external onlyRegisteredUser {\\n        address user = _getUserAddress();\\n        users[user].bio = _bio;\\n    }\\n\\n    function setCoverPhoto(string memory _cover) external onlyRegisteredUser {\\n        address user = _getUserAddress();\\n        users[user].coverPhoto = _cover;\\n    }\\n\\n    function createPost(string memory _content, string memory _image) external onlyRegisteredUser {\\n        address user = _getUserAddress();\\n\\n        require(bytes(_content).length > 0, \\\"Content should not be empty\\\");\\n\\n        if (freePostsRemaining[msg.sender] > 0) {\\n            freePostsRemaining[msg.sender]--;\\n        }\\n\\n        Post storage newPost = posts.push();\\n        newPost.author = user;\\n        newPost.content = _content;\\n        newPost.image = _image;\\n        newPost.timestamp = block.timestamp;\\n        newPost.originalPostId = 0;\\n        userPostCount[user]++;\\n\\n        emit PostCreated(user, _content, _image, block.timestamp);\\n    }\\n\\n    function sharePost(uint256 _postId) external onlyRegisteredUser {\\n        require(_postId < posts.length, \\\"Original post does not exist\\\");\\n        address user = _getUserAddress();\\n\\n        Post storage sharedPost = posts.push();\\n        sharedPost.author = user;\\n        sharedPost.content = posts[_postId].content;\\n        sharedPost.image = posts[_postId].image;\\n        sharedPost.timestamp = block.timestamp;\\n        sharedPost.originalPostId = _postId;\\n\\n        emit PostShared(user, _postId, posts.length - 1);\\n    }\\n\\n    function likePost(uint256 _postId) external onlyRegisteredUser nonReentrant {\\n        require(_postId < posts.length, \\\"Post does not exist\\\");\\n        address user = _getUserAddress();\\n\\n        Post storage post = posts[_postId];\\n        require(!post.likedBy[user], \\\"User has already liked this post\\\");\\n\\n        post.likes++;\\n        userLikeCount[user]++;\\n        post.likedBy[user] = true;\\n\\n        emit PostLiked(user, _postId);\\n    }\\n\\n    function addComment(uint256 _postId, string memory _content) external onlyRegisteredUser nonReentrant {\\n        require(_postId < posts.length, \\\"Post does not exist\\\");\\n        require(bytes(_content).length > 0, \\\"Comment should not be empty\\\");\\n        address user = _getUserAddress();\\n\\n        uint256 commentId = postCommentsCount[_postId];\\n        postComments[_postId][commentId] = Comment({\\n            commenter: user,\\n            content: _content,\\n            timestamp: block.timestamp\\n        });\\n\\n        postCommentsCount[_postId]++;\\n        posts[_postId].commentsCount++;\\n        userCommentCount[user]++;\\n\\n        emit CommentAdded(user, _postId, _content, block.timestamp);\\n    }\\n\\n    function getUserByAddress(address _userAddress) external view returns (User memory) {\\n        require(users[_userAddress].isRegistered, \\\"User not found\\\");\\n        return users[_userAddress];\\n    }\\n\\n    function getPostsCount() external view returns (uint256) {\\n        return posts.length;\\n    }\\n\\n    function getPost(uint256 _postId)\\n        external\\n        view\\n        returns (\\n            address author,\\n            string memory content,\\n            string memory image,\\n            uint256 timestamp,\\n            uint256 likes,\\n            uint256 commentsCount,\\n            uint256 originalPostId\\n        )\\n    {\\n        require(_postId < posts.length, \\\"Post does not exist\\\");\\n        Post storage post = posts[_postId];\\n        return (\\n            post.author,\\n            post.content,\\n            post.image,\\n            post.timestamp,\\n            post.likes,\\n            post.commentsCount,\\n            post.originalPostId\\n        );\\n    }\\n\\n    function getComment(uint256 _postId, uint256 _commentId)\\n        external\\n        view\\n        returns (address commenter, string memory content, uint256 timestamp)\\n    {\\n        require(_postId < posts.length, \\\"Post does not exist\\\");\\n        require(_commentId < postCommentsCount[_postId], \\\"Comment does not exist\\\");\\n\\n        Comment memory comment = postComments[_postId][_commentId];\\n        return (comment.commenter, comment.content, comment.timestamp);\\n    }\\n\\n    function getFreePostsRemaining(address _user) external view returns (uint256) {\\n        return freePostsRemaining[_user];\\n    }\\n\\n    function getUserStats(address user) external view returns (uint256 totalPosts, uint256 totalLikes, uint256 totalComments) {\\n        return (\\n            userPostCount[user],\\n            userLikeCount[user],\\n            userCommentCount[user]\\n        );\\n    }\\n\\n    function editProfile(\\n        string memory _newUsername,\\n        string memory _newProfileImage,\\n        string memory _newBio,\\n        string memory _newCoverImage,\\n        string[] memory _newInterests\\n    ) external onlyRegisteredUser {\\n        address creator = walletToCreator[msg.sender];\\n        require(bytes(_newUsername).length > 0, \\\"Username cannot be empty\\\");\\n\\n        User storage user = users[creator];\\n        user.username = _newUsername;\\n        user.profileImage = _newProfileImage;\\n        user.bio = _newBio;\\n        user.coverPhoto = _newCoverImage;\\n        user.interests = _newInterests;\\n\\n        emit ProfileImageUpdated(creator, _newProfileImage);\\n    }\\n\\n    function setUserInterests(string[] memory _interests) external onlyRegisteredUser {\\n        address user = _getUserAddress();\\n\\n        delete userInterests[user];\\n\\n        for (uint256 i = 0; i < _interests.length; i++) {\\n            userInterests[user].push(_interests[i]);\\n        }\\n    }\\n\\n    function getUserInterests(address _user) external view returns (string[] memory) {\\n        return userInterests[_user];\\n    }\\n\\n    function _getUserAddress() internal view returns (address) {\\n        address creator = walletToCreator[msg.sender];\\n        return creator != address(0) ? creator : msg.sender;\\n    }\\n\\n    uint256 constant FREE_POST_ALLOWANCE = 10;\\n}\\n\",\"keccak256\":\"0x423eb9d4b8c9ef0c34e368d533c46881c3a79cf8f11952d22946966b221e2f5d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336001600081905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361008c5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100839190610314565b60405180910390fd5b61009b816100b060201b60201c565b506100ab3361017660201b60201c565b61032f565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61018461020860201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101f65760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101ed9190610314565b60405180910390fd5b610205816100b060201b60201c565b50565b6102166102a160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1661023a6102a960201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161461029f576102636102a160201b60201c565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016102969190610314565b60405180910390fd5b565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102fe826102d3565b9050919050565b61030e816102f3565b82525050565b60006020820190506103296000830184610305565b92915050565b6149738061033e6000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c8063715018a61161010f578063aa7e5683116100a2578063f2fde38b11610071578063f2fde38b1461063c578063f5d7632014610658578063f70d205c14610674578063fb7e06d814610690576101e5565b8063aa7e568314610590578063c8bee1df146105ac578063d82d72bf146105dc578063df7969ad1461060c576101e5565b80638da5cb5b116100de5780638da5cb5b146104dc578063a2720f35146104fa578063a87430ba1461052a578063aa097f1514610560576101e5565b8063715018a614610468578063725009d3146104725780637d8494bc1461048e57806383624882146104be576101e5565b806340731c24116101875780635193c94c116101565780635193c94c146103ba57806360cd13ea146103ec57806369c212f61461041c57806370cc4bb71461044c576101e5565b806340731c24146102f057806340943d3d1461032657806348892753146103565780634e43603a14610388576101e5565b806323c4f963116101c357806323c4f963146102585780632e4a28ca14610288578063392338f5146102b857806339bc4eb8146102d4576101e5565b80630b1e7f83146101ea5780630c86a5cb146102205780630ea126f91461023c575b600080fd5b61020460048036038101906101ff919061338d565b6106ac565b604051610217979695949392919061349a565b60405180910390f35b61023a60048036038101906102359190613732565b61082e565b005b610256600480360381019061025191906137a7565b6109c5565b005b610272600480360381019061026d9190613803565b610df7565b60405161027f9190613830565b60405180910390f35b6102a2600480360381019061029d919061384b565b610e40565b6040516102af919061388b565b60405180910390f35b6102d260048036038101906102cd91906138ad565b610ef9565b005b6102ee60048036038101906102e99190613925565b6111c8565b005b61030a6004803603810190610305919061338d565b6112be565b60405161031d979695949392919061349a565b60405180910390f35b610340600480360381019061033b9190613803565b6114a9565b60405161034d9190613830565b60405180910390f35b610370600480360381019061036b919061396e565b6114c1565b60405161037f939291906139ae565b60405180910390f35b6103a2600480360381019061039d9190613803565b6116a5565b6040516103b1939291906139ec565b60405180910390f35b6103d460048036038101906103cf919061396e565b611777565b6040516103e3939291906139ae565b60405180910390f35b61040660048036038101906104019190613803565b611856565b6040516104139190613830565b60405180910390f35b61043660048036038101906104319190613803565b61186e565b6040516104439190613c25565b60405180910390f35b61046660048036038101906104619190613c47565b611d3f565b005b610470611f78565b005b61048c6004803603810190610487919061338d565b611f8c565b005b6104a860048036038101906104a39190613803565b61224c565b6040516104b59190613dd4565b60405180910390f35b6104c6612364565b6040516104d39190613830565b60405180910390f35b6104e4612371565b6040516104f19190613df6565b60405180910390f35b610514600480360381019061050f9190613803565b61239b565b6040516105219190613df6565b60405180910390f35b610544600480360381019061053f9190613803565b6123ce565b6040516105579796959493929190613e20565b60405180910390f35b61057a6004803603810190610575919061338d565b61267d565b604051610587919061388b565b60405180910390f35b6105aa60048036038101906105a59190613eab565b612729565b005b6105c660048036038101906105c19190613803565b612a4d565b6040516105d39190613830565b60405180910390f35b6105f660048036038101906105f1919061338d565b612a65565b6040516106039190613830565b60405180910390f35b61062660048036038101906106219190613803565b612a7d565b6040516106339190613830565b60405180910390f35b61065660048036038101906106519190613803565b612a95565b005b610672600480360381019061066d919061338d565b612b1b565b005b61068e60048036038101906106899190613925565b612d4f565b005b6106aa60048036038101906106a59190613925565b612e93565b005b600c81815481106106bc57600080fd5b90600052602060002090600802016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461070590613f36565b80601f016020809104026020016040519081016040528092919081815260200182805461073190613f36565b801561077e5780601f106107535761010080835404028352916020019161077e565b820191906000526020600020905b81548152906001019060200180831161076157829003601f168201915b50505050509080600201805461079390613f36565b80601f01602080910402602001604051908101604052809291908181526020018280546107bf90613f36565b801561080c5780601f106107e15761010080835404028352916020019161080c565b820191906000526020600020905b8154815290600101906020018083116107ef57829003601f168201915b5050505050908060030154908060040154908060050154908060060154905087565b6003600061083a612f89565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff166108c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bb90613fb3565b60405180910390fd5b60006108ce612f89565b9050600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061091b91906131d5565b60005b82518110156109c057600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083828151811061097957610978613fd3565b5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190915090816109b291906141ae565b50808060010191505061091e565b505050565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff1615610a55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4c906142cc565b60405180910390fd5b6000815111610a99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9090614338565b60405180910390fd5b6040518061010001604052808281526020018373ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600115158152602001604051806020016040528060008152508152602001604051806020016040528060008152508152602001604051806020016040528060008152508152602001600067ffffffffffffffff811115610b4657610b4561351c565b5b604051908082528060200260200182016040528015610b7957816020015b6060815260200190600190039081610b645790505b50815250600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081610bd191906141ae565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff0219169083151502179055506080820151816003019081610c9591906141ae565b5060a0820151816004019081610cab91906141ae565b5060c0820151816005019081610cc191906141ae565b5060e0820151816006019080519060200190610cde9291906131f6565b5090505081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f48cac28ad4dc618e15f4c2dd5e97751182f166de97b25618318b2112aa951a2f82604051610deb919061388b565b60405180910390a25050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60086020528160005260406000208181548110610e5c57600080fd5b90600052602060002001600091509150508054610e7890613f36565b80601f0160208091040260200160405190810160405280929190818152602001828054610ea490613f36565b8015610ef15780601f10610ec657610100808354040283529160200191610ef1565b820191906000526020600020905b815481529060010190602001808311610ed457829003601f168201915b505050505081565b60036000610f05612f89565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff16610f8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8690613fb3565b60405180910390fd5b6000610f99612f89565b90506000835111610fdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd6906143a4565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561107d57600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611077906143f3565b91905055505b6000600c6001816001815401808255809150500390600052602060002090600802019050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160010190816110f591906141ae565b508281600201908161110791906141ae565b5042816003018190555060008160060181905550600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061116b9061441c565b91905055508173ffffffffffffffffffffffffffffffffffffffff167f4dc899ab633bbd3c97004820698910906a6748451e00b59a3e011358dc2f9fb58585426040516111ba93929190614464565b60405180910390a250505050565b600360006111d4612f89565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff1661125e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125590613fb3565b60405180910390fd5b6000611268612f89565b905081600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050190816112b991906141ae565b505050565b6000606080600080600080600c805490508810611310576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611307906144f5565b60405180910390fd5b6000600c898154811061132657611325613fd3565b5b906000526020600020906008020190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010182600201836003015484600401548560050154866006015485805461138390613f36565b80601f01602080910402602001604051908101604052809291908181526020018280546113af90613f36565b80156113fc5780601f106113d1576101008083540402835291602001916113fc565b820191906000526020600020905b8154815290600101906020018083116113df57829003601f168201915b5050505050955084805461140f90613f36565b80601f016020809104026020016040519081016040528092919081815260200182805461143b90613f36565b80156114885780601f1061145d57610100808354040283529160200191611488565b820191906000526020600020905b81548152906001019060200180831161146b57829003601f168201915b50505050509450975097509750975097509750975050919395979092949650565b600a6020528060005260406000206000915090505481565b600060606000600c80549050851061150e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611505906144f5565b60405180910390fd5b60076000868152602001908152602001600020548410611563576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155a90614561565b60405180910390fd5b60006006600087815260200190815260200160002060008681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546115fa90613f36565b80601f016020809104026020016040519081016040528092919081815260200182805461162690613f36565b80156116735780601f1061164857610100808354040283529160200191611673565b820191906000526020600020905b81548152906001019060200180831161165657829003601f168201915b505050505081526020016002820154815250509050806000015181602001518260400151935093509350509250925092565b6000806000600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600b60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549250925092509193909250565b6006602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546117cd90613f36565b80601f01602080910402602001604051908101604052809291908181526020018280546117f990613f36565b80156118465780601f1061181b57610100808354040283529160200191611846565b820191906000526020600020905b81548152906001019060200180831161182957829003601f168201915b5050505050908060020154905083565b60096020528060005260406000206000915090505481565b61187661324f565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff16611905576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118fc906145cd565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518061010001604052908160008201805461196090613f36565b80601f016020809104026020016040519081016040528092919081815260200182805461198c90613f36565b80156119d95780601f106119ae576101008083540402835291602001916119d9565b820191906000526020600020905b8154815290600101906020018083116119bc57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff16151515158152602001600382018054611ab990613f36565b80601f0160208091040260200160405190810160405280929190818152602001828054611ae590613f36565b8015611b325780601f10611b0757610100808354040283529160200191611b32565b820191906000526020600020905b815481529060010190602001808311611b1557829003601f168201915b50505050508152602001600482018054611b4b90613f36565b80601f0160208091040260200160405190810160405280929190818152602001828054611b7790613f36565b8015611bc45780601f10611b9957610100808354040283529160200191611bc4565b820191906000526020600020905b815481529060010190602001808311611ba757829003601f168201915b50505050508152602001600582018054611bdd90613f36565b80601f0160208091040260200160405190810160405280929190818152602001828054611c0990613f36565b8015611c565780601f10611c2b57610100808354040283529160200191611c56565b820191906000526020600020905b815481529060010190602001808311611c3957829003601f168201915b5050505050815260200160068201805480602002602001604051908101604052809291908181526020016000905b82821015611d30578382906000526020600020018054611ca390613f36565b80601f0160208091040260200160405190810160405280929190818152602001828054611ccf90613f36565b8015611d1c5780601f10611cf157610100808354040283529160200191611d1c565b820191906000526020600020905b815481529060010190602001808311611cff57829003601f168201915b505050505081526020019060010190611c84565b50505050815250509050919050565b60036000611d4b612f89565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff16611dd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dcc90613fb3565b60405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000865111611e7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7490614639565b60405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905086816000019081611ed191906141ae565b5085816003019081611ee391906141ae565b5084816004019081611ef591906141ae565b5083816005019081611f0791906141ae565b5082816006019080519060200190611f209291906131f6565b508173ffffffffffffffffffffffffffffffffffffffff167f3e22697b8c73d3349d4c96c42842b506a4f025921d2a1006eab4e8b3edde50a987604051611f67919061388b565b60405180910390a250505050505050565b611f80613030565b611f8a60006130b7565b565b60036000611f98612f89565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff16612022576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161201990613fb3565b60405180910390fd5b61202a61317d565b600c805490508110612071576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612068906144f5565b60405180910390fd5b600061207b612f89565b90506000600c838154811061209357612092613fd3565b5b906000526020600020906008020190508060070160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615612132576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612129906146a5565b60405180910390fd5b8060040160008154809291906121479061441c565b9190505550600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061219c9061441c565b919050555060018160070160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550828273ffffffffffffffffffffffffffffffffffffffff167f62500381f39eb6f48b6e6f104021ceeaca9e5354918dc17b4a15bf87c5f5d28b60405160405180910390a350506122496131c3565b50565b6060600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156123595783829060005260206000200180546122cc90613f36565b80601f01602080910402602001604051908101604052809291908181526020018280546122f890613f36565b80156123455780601f1061231a57610100808354040283529160200191612345565b820191906000526020600020905b81548152906001019060200180831161232857829003601f168201915b5050505050815260200190600101906122ad565b505050509050919050565b6000600c80549050905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090508060000180546123f190613f36565b80601f016020809104026020016040519081016040528092919081815260200182805461241d90613f36565b801561246a5780601f1061243f5761010080835404028352916020019161246a565b820191906000526020600020905b81548152906001019060200180831161244d57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16908060030180546124de90613f36565b80601f016020809104026020016040519081016040528092919081815260200182805461250a90613f36565b80156125575780601f1061252c57610100808354040283529160200191612557565b820191906000526020600020905b81548152906001019060200180831161253a57829003601f168201915b50505050509080600401805461256c90613f36565b80601f016020809104026020016040519081016040528092919081815260200182805461259890613f36565b80156125e55780601f106125ba576101008083540402835291602001916125e5565b820191906000526020600020905b8154815290600101906020018083116125c857829003601f168201915b5050505050908060050180546125fa90613f36565b80601f016020809104026020016040519081016040528092919081815260200182805461262690613f36565b80156126735780601f1061264857610100808354040283529160200191612673565b820191906000526020600020905b81548152906001019060200180831161265657829003601f168201915b5050505050905087565b6002818154811061268d57600080fd5b9060005260206000200160009150905080546126a890613f36565b80601f01602080910402602001604051908101604052809291908181526020018280546126d490613f36565b80156127215780601f106126f657610100808354040283529160200191612721565b820191906000526020600020905b81548152906001019060200180831161270457829003601f168201915b505050505081565b60036000612735612f89565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff166127bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127b690613fb3565b60405180910390fd5b6127c761317d565b600c80549050821061280e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612805906144f5565b60405180910390fd5b6000815111612852576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161284990614711565b60405180910390fd5b600061285c612f89565b905060006007600085815260200190815260200160002054905060405180606001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020014281525060066000868152602001908152602001600020600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908161292791906141ae565b50604082015181600201559050506007600085815260200190815260200160002060008154809291906129599061441c565b9190505550600c848154811061297257612971613fd3565b5b906000526020600020906008020160050160008154809291906129949061441c565b9190505550600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906129e99061441c565b9190505550838273ffffffffffffffffffffffffffffffffffffffff167fdb68d60a2d5659f0528e369fe9a8cfdbec13beb23609aa9a7a5c2a2d973117e48542604051612a37929190614731565b60405180910390a35050612a496131c3565b5050565b600b6020528060005260406000206000915090505481565b60076020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b612a9d613030565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612b0f5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401612b069190613df6565b60405180910390fd5b612b18816130b7565b50565b60036000612b27612f89565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff16612bb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ba890613fb3565b60405180910390fd5b600c805490508110612bf8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bef906147ad565b60405180910390fd5b6000612c02612f89565b90506000600c6001816001815401808255809150500390600052602060002090600802019050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600c8381548110612c7f57612c7e613fd3565b5b9060005260206000209060080201600101816001019081612ca091906147f8565b50600c8381548110612cb557612cb4613fd3565b5b9060005260206000209060080201600201816002019081612cd691906147f8565b504281600301819055508281600601819055508173ffffffffffffffffffffffffffffffffffffffff167f1c03620db49e9abd75c892c4d5777b171bbcba631506a2fd6078694a4455808c846001600c80549050612d3491906148e0565b604051612d42929190614914565b60405180910390a2505050565b60036000612d5b612f89565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff16612de5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ddc90613fb3565b60405180910390fd5b6000612def612f89565b905081600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003019081612e4091906141ae565b508073ffffffffffffffffffffffffffffffffffffffff167f3e22697b8c73d3349d4c96c42842b506a4f025921d2a1006eab4e8b3edde50a983604051612e87919061388b565b60405180910390a25050565b60036000612e9f612f89565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff16612f29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f2090613fb3565b60405180910390fd5b6000612f33612f89565b905081600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004019081612f8491906141ae565b505050565b600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603613028573361302a565b805b91505090565b6130386131cd565b73ffffffffffffffffffffffffffffffffffffffff16613056612371565b73ffffffffffffffffffffffffffffffffffffffff16146130b5576130796131cd565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016130ac9190613df6565b60405180910390fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6002600054036131b9576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b600033905090565b50805460008255906000526020600020908101906131f391906132c2565b50565b82805482825590600052602060002090810192821561323e579160200282015b8281111561323d57825182908161322d91906141ae565b5091602001919060010190613216565b5b50905061324b91906132c2565b5090565b60405180610100016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001606081526020016060815260200160608152602001606081525090565b5b808211156132e257600081816132d991906132e6565b506001016132c3565b5090565b5080546132f290613f36565b6000825580601f106133045750613323565b601f0160209004906000526020600020908101906133229190613326565b5b50565b5b8082111561333f576000816000905550600101613327565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61336a81613357565b811461337557600080fd5b50565b60008135905061338781613361565b92915050565b6000602082840312156133a3576133a261334d565b5b60006133b184828501613378565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006133e5826133ba565b9050919050565b6133f5816133da565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561343557808201518184015260208101905061341a565b60008484015250505050565b6000601f19601f8301169050919050565b600061345d826133fb565b6134678185613406565b9350613477818560208601613417565b61348081613441565b840191505092915050565b61349481613357565b82525050565b600060e0820190506134af600083018a6133ec565b81810360208301526134c18189613452565b905081810360408301526134d58188613452565b90506134e4606083018761348b565b6134f1608083018661348b565b6134fe60a083018561348b565b61350b60c083018461348b565b98975050505050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61355482613441565b810181811067ffffffffffffffff821117156135735761357261351c565b5b80604052505050565b6000613586613343565b9050613592828261354b565b919050565b600067ffffffffffffffff8211156135b2576135b161351c565b5b602082029050602081019050919050565b600080fd5b600080fd5b600067ffffffffffffffff8211156135e8576135e761351c565b5b6135f182613441565b9050602081019050919050565b82818337600083830152505050565b600061362061361b846135cd565b61357c565b90508281526020810184848401111561363c5761363b6135c8565b5b6136478482856135fe565b509392505050565b600082601f83011261366457613663613517565b5b813561367484826020860161360d565b91505092915050565b600061369061368b84613597565b61357c565b905080838252602082019050602084028301858111156136b3576136b26135c3565b5b835b818110156136fa57803567ffffffffffffffff8111156136d8576136d7613517565b5b8086016136e5898261364f565b855260208501945050506020810190506136b5565b5050509392505050565b600082601f83011261371957613718613517565b5b813561372984826020860161367d565b91505092915050565b6000602082840312156137485761374761334d565b5b600082013567ffffffffffffffff81111561376657613765613352565b5b61377284828501613704565b91505092915050565b613784816133da565b811461378f57600080fd5b50565b6000813590506137a18161377b565b92915050565b600080604083850312156137be576137bd61334d565b5b60006137cc85828601613792565b925050602083013567ffffffffffffffff8111156137ed576137ec613352565b5b6137f98582860161364f565b9150509250929050565b6000602082840312156138195761381861334d565b5b600061382784828501613792565b91505092915050565b6000602082019050613845600083018461348b565b92915050565b600080604083850312156138625761386161334d565b5b600061387085828601613792565b925050602061388185828601613378565b9150509250929050565b600060208201905081810360008301526138a58184613452565b905092915050565b600080604083850312156138c4576138c361334d565b5b600083013567ffffffffffffffff8111156138e2576138e1613352565b5b6138ee8582860161364f565b925050602083013567ffffffffffffffff81111561390f5761390e613352565b5b61391b8582860161364f565b9150509250929050565b60006020828403121561393b5761393a61334d565b5b600082013567ffffffffffffffff81111561395957613958613352565b5b6139658482850161364f565b91505092915050565b600080604083850312156139855761398461334d565b5b600061399385828601613378565b92505060206139a485828601613378565b9150509250929050565b60006060820190506139c360008301866133ec565b81810360208301526139d58185613452565b90506139e4604083018461348b565b949350505050565b6000606082019050613a01600083018661348b565b613a0e602083018561348b565b613a1b604083018461348b565b949350505050565b600082825260208201905092915050565b6000613a3f826133fb565b613a498185613a23565b9350613a59818560208601613417565b613a6281613441565b840191505092915050565b613a76816133da565b82525050565b60008115159050919050565b613a9181613a7c565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000613acf8383613a34565b905092915050565b6000602082019050919050565b6000613aef82613a97565b613af98185613aa2565b935083602082028501613b0b85613ab3565b8060005b85811015613b475784840389528151613b288582613ac3565b9450613b3383613ad7565b925060208a01995050600181019050613b0f565b50829750879550505050505092915050565b6000610100830160008301518482036000860152613b778282613a34565b9150506020830151613b8c6020860182613a6d565b506040830151613b9f6040860182613a6d565b506060830151613bb26060860182613a88565b5060808301518482036080860152613bca8282613a34565b91505060a083015184820360a0860152613be48282613a34565b91505060c083015184820360c0860152613bfe8282613a34565b91505060e083015184820360e0860152613c188282613ae4565b9150508091505092915050565b60006020820190508181036000830152613c3f8184613b59565b905092915050565b600080600080600060a08688031215613c6357613c6261334d565b5b600086013567ffffffffffffffff811115613c8157613c80613352565b5b613c8d8882890161364f565b955050602086013567ffffffffffffffff811115613cae57613cad613352565b5b613cba8882890161364f565b945050604086013567ffffffffffffffff811115613cdb57613cda613352565b5b613ce78882890161364f565b935050606086013567ffffffffffffffff811115613d0857613d07613352565b5b613d148882890161364f565b925050608086013567ffffffffffffffff811115613d3557613d34613352565b5b613d4188828901613704565b9150509295509295909350565b600082825260208201905092915050565b6000613d6a82613a97565b613d748185613d4e565b935083602082028501613d8685613ab3565b8060005b85811015613dc25784840389528151613da38582613ac3565b9450613dae83613ad7565b925060208a01995050600181019050613d8a565b50829750879550505050505092915050565b60006020820190508181036000830152613dee8184613d5f565b905092915050565b6000602082019050613e0b60008301846133ec565b92915050565b613e1a81613a7c565b82525050565b600060e0820190508181036000830152613e3a818a613452565b9050613e4960208301896133ec565b613e5660408301886133ec565b613e636060830187613e11565b8181036080830152613e758186613452565b905081810360a0830152613e898185613452565b905081810360c0830152613e9d8184613452565b905098975050505050505050565b60008060408385031215613ec257613ec161334d565b5b6000613ed085828601613378565b925050602083013567ffffffffffffffff811115613ef157613ef0613352565b5b613efd8582860161364f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613f4e57607f821691505b602082108103613f6157613f60613f07565b5b50919050565b7f55736572206973206e6f74207265676973746572656400000000000000000000600082015250565b6000613f9d601683613406565b9150613fa882613f67565b602082019050919050565b60006020820190508181036000830152613fcc81613f90565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026140647fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614027565b61406e8683614027565b95508019841693508086168417925050509392505050565b6000819050919050565b60006140ab6140a66140a184613357565b614086565b613357565b9050919050565b6000819050919050565b6140c583614090565b6140d96140d1826140b2565b848454614034565b825550505050565b600090565b6140ee6140e1565b6140f98184846140bc565b505050565b5b8181101561411d576141126000826140e6565b6001810190506140ff565b5050565b601f8211156141625761413381614002565b61413c84614017565b8101602085101561414b578190505b61415f61415785614017565b8301826140fe565b50505b505050565b600082821c905092915050565b600061418560001984600802614167565b1980831691505092915050565b600061419e8383614174565b9150826002028217905092915050565b6141b7826133fb565b67ffffffffffffffff8111156141d0576141cf61351c565b5b6141da8254613f36565b6141e5828285614121565b600060209050601f8311600181146142185760008415614206578287015190505b6142108582614192565b865550614278565b601f19841661422686614002565b60005b8281101561424e57848901518255600182019150602085019450602081019050614229565b8683101561426b5784890151614267601f891682614174565b8355505b6001600288020188555050505b505050505050565b7f5573657220697320616c72656164792072656769737465726564000000000000600082015250565b60006142b6601a83613406565b91506142c182614280565b602082019050919050565b600060208201905081810360008301526142e5816142a9565b9050919050565b7f557365726e616d652073686f756c64206e6f7420626520656d70747900000000600082015250565b6000614322601c83613406565b915061432d826142ec565b602082019050919050565b6000602082019050818103600083015261435181614315565b9050919050565b7f436f6e74656e742073686f756c64206e6f7420626520656d7074790000000000600082015250565b600061438e601b83613406565b915061439982614358565b602082019050919050565b600060208201905081810360008301526143bd81614381565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006143fe82613357565b915060008203614411576144106143c4565b5b600182039050919050565b600061442782613357565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614459576144586143c4565b5b600182019050919050565b6000606082019050818103600083015261447e8186613452565b905081810360208301526144928185613452565b90506144a1604083018461348b565b949350505050565b7f506f737420646f6573206e6f7420657869737400000000000000000000000000600082015250565b60006144df601383613406565b91506144ea826144a9565b602082019050919050565b6000602082019050818103600083015261450e816144d2565b9050919050565b7f436f6d6d656e7420646f6573206e6f7420657869737400000000000000000000600082015250565b600061454b601683613406565b915061455682614515565b602082019050919050565b6000602082019050818103600083015261457a8161453e565b9050919050565b7f55736572206e6f7420666f756e64000000000000000000000000000000000000600082015250565b60006145b7600e83613406565b91506145c282614581565b602082019050919050565b600060208201905081810360008301526145e6816145aa565b9050919050565b7f557365726e616d652063616e6e6f7420626520656d7074790000000000000000600082015250565b6000614623601883613406565b915061462e826145ed565b602082019050919050565b6000602082019050818103600083015261465281614616565b9050919050565b7f557365722068617320616c7265616479206c696b6564207468697320706f7374600082015250565b600061468f602083613406565b915061469a82614659565b602082019050919050565b600060208201905081810360008301526146be81614682565b9050919050565b7f436f6d6d656e742073686f756c64206e6f7420626520656d7074790000000000600082015250565b60006146fb601b83613406565b9150614706826146c5565b602082019050919050565b6000602082019050818103600083015261472a816146ee565b9050919050565b6000604082019050818103600083015261474b8185613452565b905061475a602083018461348b565b9392505050565b7f4f726967696e616c20706f737420646f6573206e6f7420657869737400000000600082015250565b6000614797601c83613406565b91506147a282614761565b602082019050919050565b600060208201905081810360008301526147c68161478a565b9050919050565b6000815490506147dc81613f36565b9050919050565b60008190508160005260206000209050919050565b8181036148065750506148de565b61480f826147cd565b67ffffffffffffffff8111156148285761482761351c565b5b6148328254613f36565b61483d828285614121565b6000601f83116001811461486c576000841561485a578287015490505b6148648582614192565b8655506148d7565b601f19841661487a876147e3565b965061488586614002565b60005b828110156148ad57848901548255600182019150600185019450602081019050614888565b868310156148ca57848901546148c6601f891682614174565b8355505b6001600288020188555050505b5050505050505b565b60006148eb82613357565b91506148f683613357565b925082820390508181111561490e5761490d6143c4565b5b92915050565b6000604082019050614929600083018561348b565b614936602083018461348b565b939250505056fea26469706673582212206ec704b4f07f3227b37b3c80f6f179ad048320857b0093269534e5e1acd7e7e864736f6c634300081c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c8063715018a61161010f578063aa7e5683116100a2578063f2fde38b11610071578063f2fde38b1461063c578063f5d7632014610658578063f70d205c14610674578063fb7e06d814610690576101e5565b8063aa7e568314610590578063c8bee1df146105ac578063d82d72bf146105dc578063df7969ad1461060c576101e5565b80638da5cb5b116100de5780638da5cb5b146104dc578063a2720f35146104fa578063a87430ba1461052a578063aa097f1514610560576101e5565b8063715018a614610468578063725009d3146104725780637d8494bc1461048e57806383624882146104be576101e5565b806340731c24116101875780635193c94c116101565780635193c94c146103ba57806360cd13ea146103ec57806369c212f61461041c57806370cc4bb71461044c576101e5565b806340731c24146102f057806340943d3d1461032657806348892753146103565780634e43603a14610388576101e5565b806323c4f963116101c357806323c4f963146102585780632e4a28ca14610288578063392338f5146102b857806339bc4eb8146102d4576101e5565b80630b1e7f83146101ea5780630c86a5cb146102205780630ea126f91461023c575b600080fd5b61020460048036038101906101ff919061338d565b6106ac565b604051610217979695949392919061349a565b60405180910390f35b61023a60048036038101906102359190613732565b61082e565b005b610256600480360381019061025191906137a7565b6109c5565b005b610272600480360381019061026d9190613803565b610df7565b60405161027f9190613830565b60405180910390f35b6102a2600480360381019061029d919061384b565b610e40565b6040516102af919061388b565b60405180910390f35b6102d260048036038101906102cd91906138ad565b610ef9565b005b6102ee60048036038101906102e99190613925565b6111c8565b005b61030a6004803603810190610305919061338d565b6112be565b60405161031d979695949392919061349a565b60405180910390f35b610340600480360381019061033b9190613803565b6114a9565b60405161034d9190613830565b60405180910390f35b610370600480360381019061036b919061396e565b6114c1565b60405161037f939291906139ae565b60405180910390f35b6103a2600480360381019061039d9190613803565b6116a5565b6040516103b1939291906139ec565b60405180910390f35b6103d460048036038101906103cf919061396e565b611777565b6040516103e3939291906139ae565b60405180910390f35b61040660048036038101906104019190613803565b611856565b6040516104139190613830565b60405180910390f35b61043660048036038101906104319190613803565b61186e565b6040516104439190613c25565b60405180910390f35b61046660048036038101906104619190613c47565b611d3f565b005b610470611f78565b005b61048c6004803603810190610487919061338d565b611f8c565b005b6104a860048036038101906104a39190613803565b61224c565b6040516104b59190613dd4565b60405180910390f35b6104c6612364565b6040516104d39190613830565b60405180910390f35b6104e4612371565b6040516104f19190613df6565b60405180910390f35b610514600480360381019061050f9190613803565b61239b565b6040516105219190613df6565b60405180910390f35b610544600480360381019061053f9190613803565b6123ce565b6040516105579796959493929190613e20565b60405180910390f35b61057a6004803603810190610575919061338d565b61267d565b604051610587919061388b565b60405180910390f35b6105aa60048036038101906105a59190613eab565b612729565b005b6105c660048036038101906105c19190613803565b612a4d565b6040516105d39190613830565b60405180910390f35b6105f660048036038101906105f1919061338d565b612a65565b6040516106039190613830565b60405180910390f35b61062660048036038101906106219190613803565b612a7d565b6040516106339190613830565b60405180910390f35b61065660048036038101906106519190613803565b612a95565b005b610672600480360381019061066d919061338d565b612b1b565b005b61068e60048036038101906106899190613925565b612d4f565b005b6106aa60048036038101906106a59190613925565b612e93565b005b600c81815481106106bc57600080fd5b90600052602060002090600802016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461070590613f36565b80601f016020809104026020016040519081016040528092919081815260200182805461073190613f36565b801561077e5780601f106107535761010080835404028352916020019161077e565b820191906000526020600020905b81548152906001019060200180831161076157829003601f168201915b50505050509080600201805461079390613f36565b80601f01602080910402602001604051908101604052809291908181526020018280546107bf90613f36565b801561080c5780601f106107e15761010080835404028352916020019161080c565b820191906000526020600020905b8154815290600101906020018083116107ef57829003601f168201915b5050505050908060030154908060040154908060050154908060060154905087565b6003600061083a612f89565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff166108c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bb90613fb3565b60405180910390fd5b60006108ce612f89565b9050600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061091b91906131d5565b60005b82518110156109c057600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083828151811061097957610978613fd3565b5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190915090816109b291906141ae565b50808060010191505061091e565b505050565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff1615610a55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4c906142cc565b60405180910390fd5b6000815111610a99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9090614338565b60405180910390fd5b6040518061010001604052808281526020018373ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600115158152602001604051806020016040528060008152508152602001604051806020016040528060008152508152602001604051806020016040528060008152508152602001600067ffffffffffffffff811115610b4657610b4561351c565b5b604051908082528060200260200182016040528015610b7957816020015b6060815260200190600190039081610b645790505b50815250600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081610bd191906141ae565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff0219169083151502179055506080820151816003019081610c9591906141ae565b5060a0820151816004019081610cab91906141ae565b5060c0820151816005019081610cc191906141ae565b5060e0820151816006019080519060200190610cde9291906131f6565b5090505081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f48cac28ad4dc618e15f4c2dd5e97751182f166de97b25618318b2112aa951a2f82604051610deb919061388b565b60405180910390a25050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60086020528160005260406000208181548110610e5c57600080fd5b90600052602060002001600091509150508054610e7890613f36565b80601f0160208091040260200160405190810160405280929190818152602001828054610ea490613f36565b8015610ef15780601f10610ec657610100808354040283529160200191610ef1565b820191906000526020600020905b815481529060010190602001808311610ed457829003601f168201915b505050505081565b60036000610f05612f89565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff16610f8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8690613fb3565b60405180910390fd5b6000610f99612f89565b90506000835111610fdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd6906143a4565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561107d57600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611077906143f3565b91905055505b6000600c6001816001815401808255809150500390600052602060002090600802019050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160010190816110f591906141ae565b508281600201908161110791906141ae565b5042816003018190555060008160060181905550600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061116b9061441c565b91905055508173ffffffffffffffffffffffffffffffffffffffff167f4dc899ab633bbd3c97004820698910906a6748451e00b59a3e011358dc2f9fb58585426040516111ba93929190614464565b60405180910390a250505050565b600360006111d4612f89565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff1661125e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125590613fb3565b60405180910390fd5b6000611268612f89565b905081600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050190816112b991906141ae565b505050565b6000606080600080600080600c805490508810611310576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611307906144f5565b60405180910390fd5b6000600c898154811061132657611325613fd3565b5b906000526020600020906008020190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010182600201836003015484600401548560050154866006015485805461138390613f36565b80601f01602080910402602001604051908101604052809291908181526020018280546113af90613f36565b80156113fc5780601f106113d1576101008083540402835291602001916113fc565b820191906000526020600020905b8154815290600101906020018083116113df57829003601f168201915b5050505050955084805461140f90613f36565b80601f016020809104026020016040519081016040528092919081815260200182805461143b90613f36565b80156114885780601f1061145d57610100808354040283529160200191611488565b820191906000526020600020905b81548152906001019060200180831161146b57829003601f168201915b50505050509450975097509750975097509750975050919395979092949650565b600a6020528060005260406000206000915090505481565b600060606000600c80549050851061150e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611505906144f5565b60405180910390fd5b60076000868152602001908152602001600020548410611563576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155a90614561565b60405180910390fd5b60006006600087815260200190815260200160002060008681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546115fa90613f36565b80601f016020809104026020016040519081016040528092919081815260200182805461162690613f36565b80156116735780601f1061164857610100808354040283529160200191611673565b820191906000526020600020905b81548152906001019060200180831161165657829003601f168201915b505050505081526020016002820154815250509050806000015181602001518260400151935093509350509250925092565b6000806000600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600b60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549250925092509193909250565b6006602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546117cd90613f36565b80601f01602080910402602001604051908101604052809291908181526020018280546117f990613f36565b80156118465780601f1061181b57610100808354040283529160200191611846565b820191906000526020600020905b81548152906001019060200180831161182957829003601f168201915b5050505050908060020154905083565b60096020528060005260406000206000915090505481565b61187661324f565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff16611905576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118fc906145cd565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518061010001604052908160008201805461196090613f36565b80601f016020809104026020016040519081016040528092919081815260200182805461198c90613f36565b80156119d95780601f106119ae576101008083540402835291602001916119d9565b820191906000526020600020905b8154815290600101906020018083116119bc57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff16151515158152602001600382018054611ab990613f36565b80601f0160208091040260200160405190810160405280929190818152602001828054611ae590613f36565b8015611b325780601f10611b0757610100808354040283529160200191611b32565b820191906000526020600020905b815481529060010190602001808311611b1557829003601f168201915b50505050508152602001600482018054611b4b90613f36565b80601f0160208091040260200160405190810160405280929190818152602001828054611b7790613f36565b8015611bc45780601f10611b9957610100808354040283529160200191611bc4565b820191906000526020600020905b815481529060010190602001808311611ba757829003601f168201915b50505050508152602001600582018054611bdd90613f36565b80601f0160208091040260200160405190810160405280929190818152602001828054611c0990613f36565b8015611c565780601f10611c2b57610100808354040283529160200191611c56565b820191906000526020600020905b815481529060010190602001808311611c3957829003601f168201915b5050505050815260200160068201805480602002602001604051908101604052809291908181526020016000905b82821015611d30578382906000526020600020018054611ca390613f36565b80601f0160208091040260200160405190810160405280929190818152602001828054611ccf90613f36565b8015611d1c5780601f10611cf157610100808354040283529160200191611d1c565b820191906000526020600020905b815481529060010190602001808311611cff57829003601f168201915b505050505081526020019060010190611c84565b50505050815250509050919050565b60036000611d4b612f89565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff16611dd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dcc90613fb3565b60405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000865111611e7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7490614639565b60405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905086816000019081611ed191906141ae565b5085816003019081611ee391906141ae565b5084816004019081611ef591906141ae565b5083816005019081611f0791906141ae565b5082816006019080519060200190611f209291906131f6565b508173ffffffffffffffffffffffffffffffffffffffff167f3e22697b8c73d3349d4c96c42842b506a4f025921d2a1006eab4e8b3edde50a987604051611f67919061388b565b60405180910390a250505050505050565b611f80613030565b611f8a60006130b7565b565b60036000611f98612f89565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff16612022576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161201990613fb3565b60405180910390fd5b61202a61317d565b600c805490508110612071576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612068906144f5565b60405180910390fd5b600061207b612f89565b90506000600c838154811061209357612092613fd3565b5b906000526020600020906008020190508060070160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615612132576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612129906146a5565b60405180910390fd5b8060040160008154809291906121479061441c565b9190505550600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061219c9061441c565b919050555060018160070160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550828273ffffffffffffffffffffffffffffffffffffffff167f62500381f39eb6f48b6e6f104021ceeaca9e5354918dc17b4a15bf87c5f5d28b60405160405180910390a350506122496131c3565b50565b6060600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156123595783829060005260206000200180546122cc90613f36565b80601f01602080910402602001604051908101604052809291908181526020018280546122f890613f36565b80156123455780601f1061231a57610100808354040283529160200191612345565b820191906000526020600020905b81548152906001019060200180831161232857829003601f168201915b5050505050815260200190600101906122ad565b505050509050919050565b6000600c80549050905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090508060000180546123f190613f36565b80601f016020809104026020016040519081016040528092919081815260200182805461241d90613f36565b801561246a5780601f1061243f5761010080835404028352916020019161246a565b820191906000526020600020905b81548152906001019060200180831161244d57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16908060030180546124de90613f36565b80601f016020809104026020016040519081016040528092919081815260200182805461250a90613f36565b80156125575780601f1061252c57610100808354040283529160200191612557565b820191906000526020600020905b81548152906001019060200180831161253a57829003601f168201915b50505050509080600401805461256c90613f36565b80601f016020809104026020016040519081016040528092919081815260200182805461259890613f36565b80156125e55780601f106125ba576101008083540402835291602001916125e5565b820191906000526020600020905b8154815290600101906020018083116125c857829003601f168201915b5050505050908060050180546125fa90613f36565b80601f016020809104026020016040519081016040528092919081815260200182805461262690613f36565b80156126735780601f1061264857610100808354040283529160200191612673565b820191906000526020600020905b81548152906001019060200180831161265657829003601f168201915b5050505050905087565b6002818154811061268d57600080fd5b9060005260206000200160009150905080546126a890613f36565b80601f01602080910402602001604051908101604052809291908181526020018280546126d490613f36565b80156127215780601f106126f657610100808354040283529160200191612721565b820191906000526020600020905b81548152906001019060200180831161270457829003601f168201915b505050505081565b60036000612735612f89565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff166127bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127b690613fb3565b60405180910390fd5b6127c761317d565b600c80549050821061280e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612805906144f5565b60405180910390fd5b6000815111612852576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161284990614711565b60405180910390fd5b600061285c612f89565b905060006007600085815260200190815260200160002054905060405180606001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020014281525060066000868152602001908152602001600020600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908161292791906141ae565b50604082015181600201559050506007600085815260200190815260200160002060008154809291906129599061441c565b9190505550600c848154811061297257612971613fd3565b5b906000526020600020906008020160050160008154809291906129949061441c565b9190505550600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906129e99061441c565b9190505550838273ffffffffffffffffffffffffffffffffffffffff167fdb68d60a2d5659f0528e369fe9a8cfdbec13beb23609aa9a7a5c2a2d973117e48542604051612a37929190614731565b60405180910390a35050612a496131c3565b5050565b600b6020528060005260406000206000915090505481565b60076020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b612a9d613030565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612b0f5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401612b069190613df6565b60405180910390fd5b612b18816130b7565b50565b60036000612b27612f89565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff16612bb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ba890613fb3565b60405180910390fd5b600c805490508110612bf8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bef906147ad565b60405180910390fd5b6000612c02612f89565b90506000600c6001816001815401808255809150500390600052602060002090600802019050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600c8381548110612c7f57612c7e613fd3565b5b9060005260206000209060080201600101816001019081612ca091906147f8565b50600c8381548110612cb557612cb4613fd3565b5b9060005260206000209060080201600201816002019081612cd691906147f8565b504281600301819055508281600601819055508173ffffffffffffffffffffffffffffffffffffffff167f1c03620db49e9abd75c892c4d5777b171bbcba631506a2fd6078694a4455808c846001600c80549050612d3491906148e0565b604051612d42929190614914565b60405180910390a2505050565b60036000612d5b612f89565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff16612de5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ddc90613fb3565b60405180910390fd5b6000612def612f89565b905081600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003019081612e4091906141ae565b508073ffffffffffffffffffffffffffffffffffffffff167f3e22697b8c73d3349d4c96c42842b506a4f025921d2a1006eab4e8b3edde50a983604051612e87919061388b565b60405180910390a25050565b60036000612e9f612f89565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff16612f29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f2090613fb3565b60405180910390fd5b6000612f33612f89565b905081600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004019081612f8491906141ae565b505050565b600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603613028573361302a565b805b91505090565b6130386131cd565b73ffffffffffffffffffffffffffffffffffffffff16613056612371565b73ffffffffffffffffffffffffffffffffffffffff16146130b5576130796131cd565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016130ac9190613df6565b60405180910390fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6002600054036131b9576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b600033905090565b50805460008255906000526020600020908101906131f391906132c2565b50565b82805482825590600052602060002090810192821561323e579160200282015b8281111561323d57825182908161322d91906141ae565b5091602001919060010190613216565b5b50905061324b91906132c2565b5090565b60405180610100016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001606081526020016060815260200160608152602001606081525090565b5b808211156132e257600081816132d991906132e6565b506001016132c3565b5090565b5080546132f290613f36565b6000825580601f106133045750613323565b601f0160209004906000526020600020908101906133229190613326565b5b50565b5b8082111561333f576000816000905550600101613327565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61336a81613357565b811461337557600080fd5b50565b60008135905061338781613361565b92915050565b6000602082840312156133a3576133a261334d565b5b60006133b184828501613378565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006133e5826133ba565b9050919050565b6133f5816133da565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561343557808201518184015260208101905061341a565b60008484015250505050565b6000601f19601f8301169050919050565b600061345d826133fb565b6134678185613406565b9350613477818560208601613417565b61348081613441565b840191505092915050565b61349481613357565b82525050565b600060e0820190506134af600083018a6133ec565b81810360208301526134c18189613452565b905081810360408301526134d58188613452565b90506134e4606083018761348b565b6134f1608083018661348b565b6134fe60a083018561348b565b61350b60c083018461348b565b98975050505050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61355482613441565b810181811067ffffffffffffffff821117156135735761357261351c565b5b80604052505050565b6000613586613343565b9050613592828261354b565b919050565b600067ffffffffffffffff8211156135b2576135b161351c565b5b602082029050602081019050919050565b600080fd5b600080fd5b600067ffffffffffffffff8211156135e8576135e761351c565b5b6135f182613441565b9050602081019050919050565b82818337600083830152505050565b600061362061361b846135cd565b61357c565b90508281526020810184848401111561363c5761363b6135c8565b5b6136478482856135fe565b509392505050565b600082601f83011261366457613663613517565b5b813561367484826020860161360d565b91505092915050565b600061369061368b84613597565b61357c565b905080838252602082019050602084028301858111156136b3576136b26135c3565b5b835b818110156136fa57803567ffffffffffffffff8111156136d8576136d7613517565b5b8086016136e5898261364f565b855260208501945050506020810190506136b5565b5050509392505050565b600082601f83011261371957613718613517565b5b813561372984826020860161367d565b91505092915050565b6000602082840312156137485761374761334d565b5b600082013567ffffffffffffffff81111561376657613765613352565b5b61377284828501613704565b91505092915050565b613784816133da565b811461378f57600080fd5b50565b6000813590506137a18161377b565b92915050565b600080604083850312156137be576137bd61334d565b5b60006137cc85828601613792565b925050602083013567ffffffffffffffff8111156137ed576137ec613352565b5b6137f98582860161364f565b9150509250929050565b6000602082840312156138195761381861334d565b5b600061382784828501613792565b91505092915050565b6000602082019050613845600083018461348b565b92915050565b600080604083850312156138625761386161334d565b5b600061387085828601613792565b925050602061388185828601613378565b9150509250929050565b600060208201905081810360008301526138a58184613452565b905092915050565b600080604083850312156138c4576138c361334d565b5b600083013567ffffffffffffffff8111156138e2576138e1613352565b5b6138ee8582860161364f565b925050602083013567ffffffffffffffff81111561390f5761390e613352565b5b61391b8582860161364f565b9150509250929050565b60006020828403121561393b5761393a61334d565b5b600082013567ffffffffffffffff81111561395957613958613352565b5b6139658482850161364f565b91505092915050565b600080604083850312156139855761398461334d565b5b600061399385828601613378565b92505060206139a485828601613378565b9150509250929050565b60006060820190506139c360008301866133ec565b81810360208301526139d58185613452565b90506139e4604083018461348b565b949350505050565b6000606082019050613a01600083018661348b565b613a0e602083018561348b565b613a1b604083018461348b565b949350505050565b600082825260208201905092915050565b6000613a3f826133fb565b613a498185613a23565b9350613a59818560208601613417565b613a6281613441565b840191505092915050565b613a76816133da565b82525050565b60008115159050919050565b613a9181613a7c565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000613acf8383613a34565b905092915050565b6000602082019050919050565b6000613aef82613a97565b613af98185613aa2565b935083602082028501613b0b85613ab3565b8060005b85811015613b475784840389528151613b288582613ac3565b9450613b3383613ad7565b925060208a01995050600181019050613b0f565b50829750879550505050505092915050565b6000610100830160008301518482036000860152613b778282613a34565b9150506020830151613b8c6020860182613a6d565b506040830151613b9f6040860182613a6d565b506060830151613bb26060860182613a88565b5060808301518482036080860152613bca8282613a34565b91505060a083015184820360a0860152613be48282613a34565b91505060c083015184820360c0860152613bfe8282613a34565b91505060e083015184820360e0860152613c188282613ae4565b9150508091505092915050565b60006020820190508181036000830152613c3f8184613b59565b905092915050565b600080600080600060a08688031215613c6357613c6261334d565b5b600086013567ffffffffffffffff811115613c8157613c80613352565b5b613c8d8882890161364f565b955050602086013567ffffffffffffffff811115613cae57613cad613352565b5b613cba8882890161364f565b945050604086013567ffffffffffffffff811115613cdb57613cda613352565b5b613ce78882890161364f565b935050606086013567ffffffffffffffff811115613d0857613d07613352565b5b613d148882890161364f565b925050608086013567ffffffffffffffff811115613d3557613d34613352565b5b613d4188828901613704565b9150509295509295909350565b600082825260208201905092915050565b6000613d6a82613a97565b613d748185613d4e565b935083602082028501613d8685613ab3565b8060005b85811015613dc25784840389528151613da38582613ac3565b9450613dae83613ad7565b925060208a01995050600181019050613d8a565b50829750879550505050505092915050565b60006020820190508181036000830152613dee8184613d5f565b905092915050565b6000602082019050613e0b60008301846133ec565b92915050565b613e1a81613a7c565b82525050565b600060e0820190508181036000830152613e3a818a613452565b9050613e4960208301896133ec565b613e5660408301886133ec565b613e636060830187613e11565b8181036080830152613e758186613452565b905081810360a0830152613e898185613452565b905081810360c0830152613e9d8184613452565b905098975050505050505050565b60008060408385031215613ec257613ec161334d565b5b6000613ed085828601613378565b925050602083013567ffffffffffffffff811115613ef157613ef0613352565b5b613efd8582860161364f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613f4e57607f821691505b602082108103613f6157613f60613f07565b5b50919050565b7f55736572206973206e6f74207265676973746572656400000000000000000000600082015250565b6000613f9d601683613406565b9150613fa882613f67565b602082019050919050565b60006020820190508181036000830152613fcc81613f90565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026140647fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614027565b61406e8683614027565b95508019841693508086168417925050509392505050565b6000819050919050565b60006140ab6140a66140a184613357565b614086565b613357565b9050919050565b6000819050919050565b6140c583614090565b6140d96140d1826140b2565b848454614034565b825550505050565b600090565b6140ee6140e1565b6140f98184846140bc565b505050565b5b8181101561411d576141126000826140e6565b6001810190506140ff565b5050565b601f8211156141625761413381614002565b61413c84614017565b8101602085101561414b578190505b61415f61415785614017565b8301826140fe565b50505b505050565b600082821c905092915050565b600061418560001984600802614167565b1980831691505092915050565b600061419e8383614174565b9150826002028217905092915050565b6141b7826133fb565b67ffffffffffffffff8111156141d0576141cf61351c565b5b6141da8254613f36565b6141e5828285614121565b600060209050601f8311600181146142185760008415614206578287015190505b6142108582614192565b865550614278565b601f19841661422686614002565b60005b8281101561424e57848901518255600182019150602085019450602081019050614229565b8683101561426b5784890151614267601f891682614174565b8355505b6001600288020188555050505b505050505050565b7f5573657220697320616c72656164792072656769737465726564000000000000600082015250565b60006142b6601a83613406565b91506142c182614280565b602082019050919050565b600060208201905081810360008301526142e5816142a9565b9050919050565b7f557365726e616d652073686f756c64206e6f7420626520656d70747900000000600082015250565b6000614322601c83613406565b915061432d826142ec565b602082019050919050565b6000602082019050818103600083015261435181614315565b9050919050565b7f436f6e74656e742073686f756c64206e6f7420626520656d7074790000000000600082015250565b600061438e601b83613406565b915061439982614358565b602082019050919050565b600060208201905081810360008301526143bd81614381565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006143fe82613357565b915060008203614411576144106143c4565b5b600182039050919050565b600061442782613357565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614459576144586143c4565b5b600182019050919050565b6000606082019050818103600083015261447e8186613452565b905081810360208301526144928185613452565b90506144a1604083018461348b565b949350505050565b7f506f737420646f6573206e6f7420657869737400000000000000000000000000600082015250565b60006144df601383613406565b91506144ea826144a9565b602082019050919050565b6000602082019050818103600083015261450e816144d2565b9050919050565b7f436f6d6d656e7420646f6573206e6f7420657869737400000000000000000000600082015250565b600061454b601683613406565b915061455682614515565b602082019050919050565b6000602082019050818103600083015261457a8161453e565b9050919050565b7f55736572206e6f7420666f756e64000000000000000000000000000000000000600082015250565b60006145b7600e83613406565b91506145c282614581565b602082019050919050565b600060208201905081810360008301526145e6816145aa565b9050919050565b7f557365726e616d652063616e6e6f7420626520656d7074790000000000000000600082015250565b6000614623601883613406565b915061462e826145ed565b602082019050919050565b6000602082019050818103600083015261465281614616565b9050919050565b7f557365722068617320616c7265616479206c696b6564207468697320706f7374600082015250565b600061468f602083613406565b915061469a82614659565b602082019050919050565b600060208201905081810360008301526146be81614682565b9050919050565b7f436f6d6d656e742073686f756c64206e6f7420626520656d7074790000000000600082015250565b60006146fb601b83613406565b9150614706826146c5565b602082019050919050565b6000602082019050818103600083015261472a816146ee565b9050919050565b6000604082019050818103600083015261474b8185613452565b905061475a602083018461348b565b9392505050565b7f4f726967696e616c20706f737420646f6573206e6f7420657869737400000000600082015250565b6000614797601c83613406565b91506147a282614761565b602082019050919050565b600060208201905081810360008301526147c68161478a565b9050919050565b6000815490506147dc81613f36565b9050919050565b60008190508160005260206000209050919050565b8181036148065750506148de565b61480f826147cd565b67ffffffffffffffff8111156148285761482761351c565b5b6148328254613f36565b61483d828285614121565b6000601f83116001811461486c576000841561485a578287015490505b6148648582614192565b8655506148d7565b601f19841661487a876147e3565b965061488586614002565b60005b828110156148ad57848901548255600182019150600185019450602081019050614888565b868310156148ca57848901546148c6601f891682614174565b8355505b6001600288020188555050505b5050505050505b565b60006148eb82613357565b91506148f683613357565b925082820390508181111561490e5761490d6143c4565b5b92915050565b6000604082019050614929600083018561348b565b614936602083018461348b565b939250505056fea26469706673582212206ec704b4f07f3227b37b3c80f6f179ad048320857b0093269534e5e1acd7e7e864736f6c634300081c0033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 188,
        "contract": "contracts/BTChat.sol:BTChat",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 8,
        "contract": "contracts/BTChat.sol:BTChat",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 301,
        "contract": "contracts/BTChat.sol:BTChat",
        "label": "interests",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 306,
        "contract": "contracts/BTChat.sol:BTChat",
        "label": "users",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_struct(User)272_storage)"
      },
      {
        "astId": 310,
        "contract": "contracts/BTChat.sol:BTChat",
        "label": "walletToCreator",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 314,
        "contract": "contracts/BTChat.sol:BTChat",
        "label": "freePostsRemaining",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 321,
        "contract": "contracts/BTChat.sol:BTChat",
        "label": "postComments",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comment)298_storage))"
      },
      {
        "astId": 325,
        "contract": "contracts/BTChat.sol:BTChat",
        "label": "postCommentsCount",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 330,
        "contract": "contracts/BTChat.sol:BTChat",
        "label": "userInterests",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)"
      },
      {
        "astId": 334,
        "contract": "contracts/BTChat.sol:BTChat",
        "label": "userPostCount",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 338,
        "contract": "contracts/BTChat.sol:BTChat",
        "label": "userLikeCount",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 342,
        "contract": "contracts/BTChat.sol:BTChat",
        "label": "userCommentCount",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 346,
        "contract": "contracts/BTChat.sol:BTChat",
        "label": "posts",
        "offset": 0,
        "slot": "12",
        "type": "t_array(t_struct(Post)291_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Post)291_storage)dyn_storage": {
        "base": "t_struct(Post)291_storage",
        "encoding": "dynamic_array",
        "label": "struct BTChat.Post[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string[])",
        "numberOfBytes": "32",
        "value": "t_array(t_string_storage)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(User)272_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct BTChat.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)272_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comment)298_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => struct BTChat.Comment))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Comment)298_storage)"
      },
      "t_mapping(t_uint256,t_struct(Comment)298_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct BTChat.Comment)",
        "numberOfBytes": "32",
        "value": "t_struct(Comment)298_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Comment)298_storage": {
        "encoding": "inplace",
        "label": "struct BTChat.Comment",
        "members": [
          {
            "astId": 293,
            "contract": "contracts/BTChat.sol:BTChat",
            "label": "commenter",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 295,
            "contract": "contracts/BTChat.sol:BTChat",
            "label": "content",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 297,
            "contract": "contracts/BTChat.sol:BTChat",
            "label": "timestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Post)291_storage": {
        "encoding": "inplace",
        "label": "struct BTChat.Post",
        "members": [
          {
            "astId": 274,
            "contract": "contracts/BTChat.sol:BTChat",
            "label": "author",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 276,
            "contract": "contracts/BTChat.sol:BTChat",
            "label": "content",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 278,
            "contract": "contracts/BTChat.sol:BTChat",
            "label": "image",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 280,
            "contract": "contracts/BTChat.sol:BTChat",
            "label": "timestamp",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 282,
            "contract": "contracts/BTChat.sol:BTChat",
            "label": "likes",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 284,
            "contract": "contracts/BTChat.sol:BTChat",
            "label": "commentsCount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 286,
            "contract": "contracts/BTChat.sol:BTChat",
            "label": "originalPostId",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 290,
            "contract": "contracts/BTChat.sol:BTChat",
            "label": "likedBy",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_struct(User)272_storage": {
        "encoding": "inplace",
        "label": "struct BTChat.User",
        "members": [
          {
            "astId": 256,
            "contract": "contracts/BTChat.sol:BTChat",
            "label": "username",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 258,
            "contract": "contracts/BTChat.sol:BTChat",
            "label": "userAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 260,
            "contract": "contracts/BTChat.sol:BTChat",
            "label": "sender",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 262,
            "contract": "contracts/BTChat.sol:BTChat",
            "label": "isRegistered",
            "offset": 20,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 264,
            "contract": "contracts/BTChat.sol:BTChat",
            "label": "profileImage",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 266,
            "contract": "contracts/BTChat.sol:BTChat",
            "label": "bio",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 268,
            "contract": "contracts/BTChat.sol:BTChat",
            "label": "coverPhoto",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 271,
            "contract": "contracts/BTChat.sol:BTChat",
            "label": "interests",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_string_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}